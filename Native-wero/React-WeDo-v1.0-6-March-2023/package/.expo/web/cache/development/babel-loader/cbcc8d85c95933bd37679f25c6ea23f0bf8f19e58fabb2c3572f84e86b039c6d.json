{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSurfaceColorValue = exports.useSurfaceColor = void 0;\nvar _react = require(\"react\");\nvar _chromaJs = _interopRequireDefault(require(\"chroma-js\"));\nvar _ThemeContext = require(\"../base/ThemeContext\");\nvar _useSurfaceScale = require(\"./use-surface-scale\");\nvar domain = [0, 1, 2, 3, 4, 6, 8, 12, 16, 24].map(function (n) {\n  return n / 24 * 100;\n});\nvar useSurfaceColor = function useSurfaceColor() {\n  var _useTheme = (0, _ThemeContext.useTheme)(),\n    colorScheme = _useTheme.colorScheme;\n  var surfaceScale = (0, _useSurfaceScale.useSurfaceScale)();\n  return (0, _react.useMemo)(function () {\n    if (colorScheme === 'light') return _chromaJs.default.scale([surfaceScale(0)]);\n    return _chromaJs.default.scale([0, 0.05, 0.07, 0.08, 0.09, 0.11, 0.12, 0.14, 0.15, 0.1].map(function (c) {\n      return surfaceScale(c);\n    })).domain(domain);\n  }, [colorScheme, surfaceScale]);\n};\nexports.useSurfaceColor = useSurfaceColor;\nvar useSurfaceColorValue = function useSurfaceColorValue(elevation) {\n  var surfaceScale = useSurfaceColor();\n  return (0, _react.useMemo)(function () {\n    return surfaceScale(elevation).hex();\n  }, [surfaceScale, elevation]);\n};\nexports.useSurfaceColorValue = useSurfaceColorValue;","map":{"version":3,"names":["_react","require","_chromaJs","_interopRequireDefault","_ThemeContext","_useSurfaceScale","domain","map","n","useSurfaceColor","_useTheme","useTheme","colorScheme","surfaceScale","useSurfaceScale","useMemo","chroma","scale","c","exports","useSurfaceColorValue","elevation","hex"],"sources":["C:\\Users\\SIAM\\Downloads\\React-WeDo-v1.0-6-March-2023\\package\\node_modules\\@react-native-material\\core\\lib\\module\\hooks\\use-surface-color.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport chroma from 'chroma-js';\nimport { Elevation, useTheme } from '../base/ThemeContext';\nimport { useSurfaceScale } from './use-surface-scale';\n\nconst domain = [0, 1, 2, 3, 4, 6, 8, 12, 16, 24].map((n) => (n / 24) * 100);\n\nexport const useSurfaceColor = () => {\n  const { colorScheme } = useTheme();\n  const surfaceScale = useSurfaceScale();\n\n  return useMemo(() => {\n    if (colorScheme === 'light') return chroma.scale([surfaceScale(0)]);\n    return chroma\n      .scale([0, 0.05, 0.07, 0.08, 0.09, 0.11, 0.12, 0.14, 0.15, 0.1].map((c) => surfaceScale(c)))\n      .domain(domain);\n  }, [colorScheme, surfaceScale]);\n};\n\nexport const useSurfaceColorValue = (elevation: Elevation) => {\n  const surfaceScale = useSurfaceColor();\n\n  return useMemo(() => surfaceScale(elevation).hex(), [surfaceScale, elevation]);\n};\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,SAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,aAAA,GAAAH,OAAA;AACA,IAAAI,gBAAA,GAAAJ,OAAA;AAEA,IAAMK,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkCC,GAAlC,CAAuC,UAAAC,CAAD;EAAA,OAAQA,CAAC,GAAG,EAAL,GAAW,GAAxD;AAAA,EAAf;AAEO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EACnC,IAAAC,SAAA,GAAwB,IAAAC,sBAAQ,GAAhC;IAAQC,WAAA,GAAAF,SAAA,CAAAE,WAAA;EACR,IAAMC,YAAY,GAAG,IAAAC,gCAAe,GAApC;EAEA,OAAO,IAAAC,cAAO,EAAC,YAAM;IACnB,IAAIH,WAAW,KAAK,OAApB,EAA6B,OAAOI,iBAAM,CAACC,KAAP,CAAa,CAACJ,YAAY,CAAC,CAAD,CAAb,CAAb,CAAP;IAC7B,OAAOG,iBAAM,CACVC,KADI,CACE,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,GAApD,EAAyDV,GAAzD,CAA8D,UAAAW,CAAD;MAAA,OAAOL,YAAY,CAACK,CAAD,CAAhF;IAAA,EADF,EAEJZ,MAFI,CAEGA,MAFH,CAAP;EAGD,CALa,EAKX,CAACM,WAAD,EAAcC,YAAd,CALW,CAAd;AAMD,CAVM;AAAAM,OAAA,CAAAV,eAAA,GAAAA,eAAA;AAYA,IAAMW,oBAAoB,GAAI,SAAxBA,oBAAoBA,CAAIC,SAAD,EAA0B;EAC5D,IAAMR,YAAY,GAAGJ,eAAe,EAApC;EAEA,OAAO,IAAAM,cAAO,EAAC;IAAA,OAAMF,YAAY,CAACQ,SAAD,CAAZ,CAAwBC,GAAxB,EAAP;EAAA,GAAsC,CAACT,YAAD,EAAeQ,SAAf,CAAtC,CAAd;AACD,CAJM;AAAAF,OAAA,CAAAC,oBAAA,GAAAA,oBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}