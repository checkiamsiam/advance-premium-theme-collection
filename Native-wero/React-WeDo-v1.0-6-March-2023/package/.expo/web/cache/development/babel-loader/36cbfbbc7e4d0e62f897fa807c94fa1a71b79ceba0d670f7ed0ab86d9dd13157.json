{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _theme = require(\"../../constants/theme\");\nvar _reactNativeSvg = require(\"react-native-svg\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\SIAM\\\\Downloads\\\\React-WeDo-v1.0-6-March-2023\\\\package\\\\app\\\\components\\\\Input\\\\CustomInput.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar CustomInput = function CustomInput(props) {\n  var _useState = (0, _react.useState)(true),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    passwordShow = _useState2[0],\n    setPasswordShow = _useState2[1];\n  var handndleShowPassword = function handndleShowPassword() {\n    setPasswordShow(!passwordShow);\n  };\n  return (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {\n    children: (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: {\n        position: 'relative',\n        justifyContent: 'center'\n      },\n      children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n        style: {\n          position: 'absolute',\n          left: 20\n        },\n        children: props.icon && props.icon\n      }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n        secureTextEntry: props.type === \"password\" ? passwordShow : false,\n        style: [Object.assign({}, _theme.FONTS.font, {\n          fontSize: 16,\n          borderWidth: 1,\n          color: _theme.COLORS.title,\n          borderColor: _theme.COLORS.borderColor,\n          borderRadius: _theme.SIZES.radius,\n          paddingVertical: 12,\n          paddingHorizontal: 15\n        }), props.icon && {\n          paddingLeft: 50\n        }, props.inputLg && {\n          paddingVertical: 18\n        }, props.inputSm && {\n          paddingVertical: 7\n        }, props.inputRounded && {\n          borderRadius: 30\n        }, props.inputBorder && {\n          borderWidth: 0,\n          borderBottomWidth: 1,\n          borderRadius: 0\n        }],\n        placeholderTextColor: _theme.COLORS.text,\n        placeholder: props.placeholder,\n        onChangeText: props.onChangeText\n      }), props.type === \"password\" && (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n        accessible: true,\n        accessibilityLabel: \"Password\",\n        accessibilityHint: \"Password show and hidden\",\n        onPress: function onPress() {\n          return handndleShowPassword();\n        },\n        style: styles.eyeIcon,\n        children: (0, _jsxRuntime.jsx)(_reactNativeSvg.SvgXml, {\n          xml: passwordShow ? _theme.ICONS.eyeClose : _theme.ICONS.eyeOpen\n        })\n      })]\n    })\n  });\n};\nvar styles = _reactNative.StyleSheet.create({\n  eyeIcon: {\n    position: 'absolute',\n    height: 50,\n    width: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 0,\n    zIndex: 1,\n    top: 0\n  }\n});\nvar _default = CustomInput;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_theme","_reactNativeSvg","_jsxRuntime","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","CustomInput","props","_useState","useState","_useState2","_slicedToArray2","passwordShow","setPasswordShow","handndleShowPassword","jsx","Fragment","children","jsxs","View","style","position","justifyContent","left","icon","TextInput","secureTextEntry","type","assign","FONTS","font","fontSize","borderWidth","color","COLORS","title","borderColor","borderRadius","SIZES","radius","paddingVertical","paddingHorizontal","paddingLeft","inputLg","inputSm","inputRounded","inputBorder","borderBottomWidth","placeholderTextColor","text","placeholder","onChangeText","TouchableOpacity","accessible","accessibilityLabel","accessibilityHint","onPress","styles","eyeIcon","SvgXml","xml","ICONS","eyeClose","eyeOpen","StyleSheet","create","height","width","alignItems","right","zIndex","top","_default","exports"],"sources":["C:/Users/SIAM/Downloads/React-WeDo-v1.0-6-March-2023/package/app/components/Input/CustomInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, TextInput, TouchableOpacity, View } from 'react-native';\r\nimport { COLORS, FONTS, ICONS, SIZES } from '../../constants/theme';\r\nimport { SvgXml } from 'react-native-svg';\r\n\r\nconst CustomInput = (props) => {\r\n\r\n\r\n    const [passwordShow , setPasswordShow ] = useState(true);\r\n    \r\n    const handndleShowPassword = () => {\r\n        setPasswordShow(!passwordShow);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <View style={{position:'relative',justifyContent:'center'}}>\r\n                <View style={{\r\n                    position:'absolute',\r\n                    left:20,\r\n                    //top:16,\r\n                }}>\r\n                    {props.icon && props.icon}\r\n                </View>\r\n                <TextInput\r\n                    secureTextEntry={props.type === \"password\" ? passwordShow : false}\r\n                    style={[{\r\n                        ...FONTS.font,\r\n                        fontSize:16,\r\n                        borderWidth:1,\r\n                        color:COLORS.title,\r\n                        borderColor:COLORS.borderColor,\r\n                        borderRadius:SIZES.radius,\r\n                        paddingVertical:12,\r\n                        paddingHorizontal:15,\r\n                    }, props.icon && {\r\n                        paddingLeft:50,\r\n                    },props.inputLg && {\r\n                        paddingVertical:18,\r\n                    },props.inputSm && {\r\n                        paddingVertical:7,\r\n                    },props.inputRounded && {\r\n                        borderRadius:30,\r\n                    },props.inputBorder && {\r\n                        borderWidth:0,\r\n                        borderBottomWidth:1,\r\n                        borderRadius:0,\r\n                    }]}\r\n                    placeholderTextColor={COLORS.text}\r\n                    placeholder={props.placeholder}\r\n                    onChangeText={props.onChangeText}\r\n                    //value={props.value}\r\n                />\r\n                {props.type === \"password\" &&\r\n                    <TouchableOpacity\r\n                        accessible={true}\r\n                        accessibilityLabel=\"Password\"\r\n                        accessibilityHint=\"Password show and hidden\"\r\n                        onPress={() => handndleShowPassword()}\r\n                        style={styles.eyeIcon}>\r\n                        <SvgXml\r\n                            xml={passwordShow ? ICONS.eyeClose : ICONS.eyeOpen}\r\n                        />\r\n                    </TouchableOpacity>\r\n                }\r\n            </View>\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    \r\n    eyeIcon:{\r\n        position:'absolute',\r\n        height:50,\r\n        width:50,\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        right:0,\r\n        zIndex:1,\r\n        top:0,\r\n    }\r\n})\r\n\r\nexport default CustomInput;"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAH,OAAA;AAA0C,IAAAI,WAAA,GAAAJ,OAAA;AAAA,IAAAK,KAAA;EAAAC,YAAA;AAAA,SAAAC,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAT,wBAAAa,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAE1C,IAAMW,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAK;EAG3B,IAAAC,SAAA,GAA0C,IAAAC,eAAQ,EAAC,IAAI,CAAC;IAAAC,UAAA,OAAAC,eAAA,CAAApB,OAAA,EAAAiB,SAAA;IAAjDI,YAAY,GAAAF,UAAA;IAAGG,eAAe,GAAAH,UAAA;EAErC,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IAC/BD,eAAe,CAAC,CAACD,YAAY,CAAC;EAClC,CAAC;EAED,OACI,IAAA/B,WAAA,CAAAkC,GAAA,EAAAlC,WAAA,CAAAmC,QAAA;IAAAC,QAAA,EACI,IAAApC,WAAA,CAAAqC,IAAA,EAACxC,YAAA,CAAAyC,IAAI;MAACC,KAAK,EAAE;QAACC,QAAQ,EAAC,UAAU;QAACC,cAAc,EAAC;MAAQ,CAAE;MAAAL,QAAA,GACvD,IAAApC,WAAA,CAAAkC,GAAA,EAACrC,YAAA,CAAAyC,IAAI;QAACC,KAAK,EAAE;UACTC,QAAQ,EAAC,UAAU;UACnBE,IAAI,EAAC;QAET,CAAE;QAAAN,QAAA,EACGV,KAAK,CAACiB,IAAI,IAAIjB,KAAK,CAACiB;MAAI,CACvB,CAAC,EACP,IAAA3C,WAAA,CAAAkC,GAAA,EAACrC,YAAA,CAAA+C,SAAS;QACNC,eAAe,EAAEnB,KAAK,CAACoB,IAAI,KAAK,UAAU,GAAGf,YAAY,GAAG,KAAM;QAClEQ,KAAK,EAAE,CAAAvB,MAAA,CAAA+B,MAAA,KACAC,YAAK,CAACC,IAAI;UACbC,QAAQ,EAAC,EAAE;UACXC,WAAW,EAAC,CAAC;UACbC,KAAK,EAACC,aAAM,CAACC,KAAK;UAClBC,WAAW,EAACF,aAAM,CAACE,WAAW;UAC9BC,YAAY,EAACC,YAAK,CAACC,MAAM;UACzBC,eAAe,EAAC,EAAE;UAClBC,iBAAiB,EAAC;QAAE,IACrBlC,KAAK,CAACiB,IAAI,IAAI;UACbkB,WAAW,EAAC;QAChB,CAAC,EAACnC,KAAK,CAACoC,OAAO,IAAI;UACfH,eAAe,EAAC;QACpB,CAAC,EAACjC,KAAK,CAACqC,OAAO,IAAI;UACfJ,eAAe,EAAC;QACpB,CAAC,EAACjC,KAAK,CAACsC,YAAY,IAAI;UACpBR,YAAY,EAAC;QACjB,CAAC,EAAC9B,KAAK,CAACuC,WAAW,IAAI;UACnBd,WAAW,EAAC,CAAC;UACbe,iBAAiB,EAAC,CAAC;UACnBV,YAAY,EAAC;QACjB,CAAC,CAAE;QACHW,oBAAoB,EAAEd,aAAM,CAACe,IAAK;QAClCC,WAAW,EAAE3C,KAAK,CAAC2C,WAAY;QAC/BC,YAAY,EAAE5C,KAAK,CAAC4C;MAAa,CAEpC,CAAC,EACD5C,KAAK,CAACoB,IAAI,KAAK,UAAU,IACtB,IAAA9C,WAAA,CAAAkC,GAAA,EAACrC,YAAA,CAAA0E,gBAAgB;QACbC,UAAU,EAAE,IAAK;QACjBC,kBAAkB,EAAC,UAAU;QAC7BC,iBAAiB,EAAC,0BAA0B;QAC5CC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM1C,oBAAoB,CAAC,CAAC;QAAA,CAAC;QACtCM,KAAK,EAAEqC,MAAM,CAACC,OAAQ;QAAAzC,QAAA,EACtB,IAAApC,WAAA,CAAAkC,GAAA,EAACnC,eAAA,CAAA+E,MAAM;UACHC,GAAG,EAAEhD,YAAY,GAAGiD,YAAK,CAACC,QAAQ,GAAGD,YAAK,CAACE;QAAQ,CACtD;MAAC,CACY,CAAC;IAAA,CAErB;EAAC,CACT,CAAC;AAEX,CAAC;AAED,IAAMN,MAAM,GAAGO,uBAAU,CAACC,MAAM,CAAC;EAE7BP,OAAO,EAAC;IACJrC,QAAQ,EAAC,UAAU;IACnB6C,MAAM,EAAC,EAAE;IACTC,KAAK,EAAC,EAAE;IACRC,UAAU,EAAC,QAAQ;IACnB9C,cAAc,EAAC,QAAQ;IACvB+C,KAAK,EAAC,CAAC;IACPC,MAAM,EAAC,CAAC;IACRC,GAAG,EAAC;EACR;AACJ,CAAC,CAAC;AAAA,IAAAC,QAAA,GAEalE,WAAW;AAAAmE,OAAA,CAAAlF,OAAA,GAAAiF,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}