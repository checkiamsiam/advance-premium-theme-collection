{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _FontAwesome = _interopRequireDefault(require(\"react-native-vector-icons/FontAwesome\"));\nvar _reactNativeDropShadow = _interopRequireDefault(require(\"react-native-drop-shadow\"));\nvar _reactNativeSnackbar = _interopRequireDefault(require(\"react-native-snackbar\"));\nvar _StyleSheet = require(\"../../constants/StyleSheet\");\nvar _Header = _interopRequireDefault(require(\"../../layout/Header\"));\nvar _theme = require(\"../../constants/theme\");\nvar _ListStyle = _interopRequireDefault(require(\"../../components/list/ListStyle1\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\SIAM\\\\Downloads\\\\React-WeDo-v1.0-6-March-2023\\\\package\\\\app\\\\Screens\\\\Components\\\\Snakbars.js\";\nvar Snackbars = function Snackbars() {\n  var ShowSnackbarSuccess = function ShowSnackbarSuccess() {\n    _reactNativeSnackbar.default.show({\n      text: 'Confirmed',\n      backgroundColor: _theme.COLORS.success,\n      duration: _reactNativeSnackbar.default.LENGTH_SHORT\n    });\n  };\n  var ShowSnackbarWarning = function ShowSnackbarWarning() {\n    _reactNativeSnackbar.default.show({\n      text: \"Something's wrong!\",\n      backgroundColor: _theme.COLORS.warning,\n      duration: _reactNativeSnackbar.default.LENGTH_SHORT\n    });\n  };\n  var ShowSnackbarInfo = function ShowSnackbarInfo() {\n    _reactNativeSnackbar.default.show({\n      text: \"We're on it\",\n      backgroundColor: _theme.COLORS.info,\n      duration: _reactNativeSnackbar.default.LENGTH_SHORT\n    });\n  };\n  var ShowSnackbarError = function ShowSnackbarError() {\n    _reactNativeSnackbar.default.show({\n      text: 'Error Occured',\n      backgroundColor: _theme.COLORS.danger,\n      duration: _reactNativeSnackbar.default.LENGTH_SHORT\n    });\n  };\n  return (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {\n    children: (0, _jsxRuntime.jsxs)(_reactNative.SafeAreaView, {\n      style: {\n        flex: 1,\n        backgroundColor: _theme.COLORS.backgroundColor\n      },\n      children: [(0, _jsxRuntime.jsx)(_Header.default, {\n        title: 'Snackbars',\n        titleLeft: true,\n        leftIcon: 'back'\n      }), (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {\n        children: (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: Object.assign({}, _StyleSheet.GlobalStyleSheet.container),\n          children: (0, _jsxRuntime.jsx)(_reactNativeDropShadow.default, {\n            style: {\n              shadowColor: \"#000\",\n              shadowOffset: {\n                width: 0,\n                height: 5\n              },\n              shadowOpacity: .15,\n              shadowRadius: 5\n            },\n            children: (0, _jsxRuntime.jsxs)(_reactNative.View, {\n              style: _StyleSheet.GlobalStyleSheet.card,\n              children: [(0, _jsxRuntime.jsx)(_ListStyle.default, {\n                onPress: function onPress() {\n                  return ShowSnackbarSuccess();\n                },\n                arrowRight: true,\n                icon: (0, _jsxRuntime.jsx)(_FontAwesome.default, {\n                  size: 14,\n                  color: _theme.COLORS.success,\n                  name: 'check'\n                }),\n                title: 'Confirmation Snackbar'\n              }), (0, _jsxRuntime.jsx)(_ListStyle.default, {\n                onPress: function onPress() {\n                  return ShowSnackbarWarning();\n                },\n                arrowRight: true,\n                icon: (0, _jsxRuntime.jsx)(_FontAwesome.default, {\n                  size: 14,\n                  color: _theme.COLORS.warning,\n                  name: 'warning'\n                }),\n                title: 'Warning Snackbar'\n              }), (0, _jsxRuntime.jsx)(_ListStyle.default, {\n                onPress: function onPress() {\n                  return ShowSnackbarInfo();\n                },\n                arrowRight: true,\n                icon: (0, _jsxRuntime.jsx)(_FontAwesome.default, {\n                  size: 14,\n                  color: _theme.COLORS.info,\n                  name: 'refresh'\n                }),\n                title: 'Loading Snackbar'\n              }), (0, _jsxRuntime.jsx)(_ListStyle.default, {\n                onPress: function onPress() {\n                  return ShowSnackbarError();\n                },\n                arrowRight: true,\n                icon: (0, _jsxRuntime.jsx)(_FontAwesome.default, {\n                  size: 14,\n                  color: _theme.COLORS.danger,\n                  name: 'close'\n                }),\n                title: 'Error Snackbar'\n              })]\n            })\n          })\n        })\n      })]\n    })\n  });\n};\nvar _default = Snackbars;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_FontAwesome","_reactNativeDropShadow","_reactNativeSnackbar","_StyleSheet","_Header","_theme","_ListStyle","_jsxRuntime","_this","_jsxFileName","Snackbars","ShowSnackbarSuccess","Snackbar","show","text","backgroundColor","COLORS","success","duration","LENGTH_SHORT","ShowSnackbarWarning","warning","ShowSnackbarInfo","info","ShowSnackbarError","danger","jsx","Fragment","children","jsxs","SafeAreaView","style","flex","default","title","titleLeft","leftIcon","ScrollView","View","Object","assign","GlobalStyleSheet","container","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","card","onPress","arrowRight","icon","size","color","name","_default","exports"],"sources":["C:/Users/SIAM/Downloads/React-WeDo-v1.0-6-March-2023/package/app/Screens/Components/Snakbars.js"],"sourcesContent":["import React from 'react';\r\nimport { SafeAreaView, ScrollView, View } from 'react-native';\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport DropShadow from 'react-native-drop-shadow';\r\nimport Snackbar from 'react-native-snackbar';\r\nimport { GlobalStyleSheet } from '../../constants/StyleSheet';\r\nimport Header from '../../layout/Header';\r\nimport { COLORS } from '../../constants/theme';\r\nimport ListStyle1 from '../../components/list/ListStyle1';\r\n\r\n\r\nconst Snackbars = () => {\r\n\r\n    const ShowSnackbarSuccess = () => {\r\n        Snackbar.show({\r\n            text: 'Confirmed',\r\n            backgroundColor: COLORS.success,\r\n            duration: Snackbar.LENGTH_SHORT,\r\n        });\r\n    }\r\n    const ShowSnackbarWarning = () => {\r\n        Snackbar.show({\r\n            text: \"Something's wrong!\",\r\n            backgroundColor: COLORS.warning,\r\n            duration: Snackbar.LENGTH_SHORT,\r\n        });\r\n    }\r\n    const ShowSnackbarInfo = () => {\r\n        Snackbar.show({\r\n            text: \"We're on it\",\r\n            backgroundColor: COLORS.info,\r\n            duration: Snackbar.LENGTH_SHORT,\r\n        });\r\n    }\r\n    const ShowSnackbarError = () => {\r\n        Snackbar.show({\r\n            text: 'Error Occured',\r\n            backgroundColor: COLORS.danger,\r\n            duration: Snackbar.LENGTH_SHORT,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SafeAreaView style={{flex:1,backgroundColor:COLORS.backgroundColor}}>\r\n                <Header title={'Snackbars'} titleLeft leftIcon={'back'}/>\r\n                <ScrollView>\r\n                    <View style={{...GlobalStyleSheet.container}}>\r\n                        <DropShadow\r\n                            style={{\r\n                                shadowColor: \"#000\",\r\n                                shadowOffset: {\r\n                                    width: 0,\r\n                                    height: 5,\r\n                                },\r\n                                shadowOpacity: .15,\r\n                                shadowRadius: 5,\r\n                            }}\r\n                        >\r\n                            <View style={GlobalStyleSheet.card}>\r\n                                <ListStyle1\r\n                                    onPress={() => ShowSnackbarSuccess()}\r\n                                    arrowRight\r\n                                    icon={<FontAwesome size={14} color={COLORS.success} name={'check'}/>}\r\n                                    title={'Confirmation Snackbar'}\r\n                                    />\r\n                                <ListStyle1\r\n                                    onPress={() => ShowSnackbarWarning()}\r\n                                    arrowRight\r\n                                    icon={<FontAwesome size={14} color={COLORS.warning} name={'warning'}/>}\r\n                                    title={'Warning Snackbar'}\r\n                                    />\r\n                                <ListStyle1\r\n                                    onPress={() => ShowSnackbarInfo()}\r\n                                    arrowRight\r\n                                    icon={<FontAwesome size={14} color={COLORS.info} name={'refresh'}/>}\r\n                                    title={'Loading Snackbar'}\r\n                                    />\r\n                                <ListStyle1\r\n                                    onPress={() => ShowSnackbarError()}\r\n                                    arrowRight\r\n                                    icon={<FontAwesome size={14} color={COLORS.danger} name={'close'}/>}\r\n                                    title={'Error Snackbar'}\r\n                                />\r\n                            </View>\r\n                        </DropShadow>\r\n                    </View>\r\n                </ScrollView>\r\n                \r\n            </SafeAreaView>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Snackbars;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}