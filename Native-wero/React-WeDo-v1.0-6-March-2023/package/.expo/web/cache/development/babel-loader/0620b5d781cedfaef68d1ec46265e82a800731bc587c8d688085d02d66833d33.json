{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PanResponderAdapter = PanResponderAdapter;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _useAnimatedValue = require(\"./useAnimatedValue\");\nvar _excluded = [\"timing\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar DEAD_ZONE = 12;\nvar DefaultTransitionSpec = {\n  timing: _reactNative.Animated.spring,\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true\n};\nfunction PanResponderAdapter(_ref) {\n  var layout = _ref.layout,\n    _ref$keyboardDismissM = _ref.keyboardDismissMode,\n    keyboardDismissMode = _ref$keyboardDismissM === void 0 ? 'auto' : _ref$keyboardDismissM,\n    _ref$swipeEnabled = _ref.swipeEnabled,\n    swipeEnabled = _ref$swipeEnabled === void 0 ? true : _ref$swipeEnabled,\n    navigationState = _ref.navigationState,\n    onIndexChange = _ref.onIndexChange,\n    onSwipeStart = _ref.onSwipeStart,\n    onSwipeEnd = _ref.onSwipeEnd,\n    children = _ref.children,\n    style = _ref.style,\n    _ref$animationEnabled = _ref.animationEnabled,\n    animationEnabled = _ref$animationEnabled === void 0 ? false : _ref$animationEnabled;\n  var routes = navigationState.routes,\n    index = navigationState.index;\n  var panX = (0, _useAnimatedValue.useAnimatedValue)(0);\n  var listenersRef = React.useRef([]);\n  var navigationStateRef = React.useRef(navigationState);\n  var layoutRef = React.useRef(layout);\n  var onIndexChangeRef = React.useRef(onIndexChange);\n  var currentIndexRef = React.useRef(index);\n  var pendingIndexRef = React.useRef();\n  var swipeVelocityThreshold = 0.15;\n  var swipeDistanceThreshold = layout.width / 1.75;\n  var jumpToIndex = React.useCallback(function (index) {\n    var animate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : animationEnabled;\n    var offset = -index * layoutRef.current.width;\n    var timing = DefaultTransitionSpec.timing,\n      transitionConfig = (0, _objectWithoutProperties2.default)(DefaultTransitionSpec, _excluded);\n    if (animate) {\n      _reactNative.Animated.parallel([timing(panX, Object.assign({}, transitionConfig, {\n        toValue: offset,\n        useNativeDriver: false\n      }))]).start(function (_ref2) {\n        var finished = _ref2.finished;\n        if (finished) {\n          onIndexChangeRef.current(index);\n          pendingIndexRef.current = undefined;\n        }\n      });\n      pendingIndexRef.current = index;\n    } else {\n      panX.setValue(offset);\n      onIndexChangeRef.current(index);\n      pendingIndexRef.current = undefined;\n    }\n  }, [animationEnabled, panX]);\n  React.useEffect(function () {\n    navigationStateRef.current = navigationState;\n    layoutRef.current = layout;\n    onIndexChangeRef.current = onIndexChange;\n  });\n  React.useEffect(function () {\n    var offset = -navigationStateRef.current.index * layout.width;\n    panX.setValue(offset);\n  }, [layout.width, panX]);\n  React.useEffect(function () {\n    if (keyboardDismissMode === 'auto') {\n      _reactNative.Keyboard.dismiss();\n    }\n    if (layout.width && currentIndexRef.current !== index) {\n      currentIndexRef.current = index;\n      jumpToIndex(index);\n    }\n  }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n  var isMovingHorizontally = function isMovingHorizontally(_, gestureState) {\n    return Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2);\n  };\n  var canMoveScreen = function canMoveScreen(event, gestureState) {\n    if (swipeEnabled === false) {\n      return false;\n    }\n    var diffX = _reactNative.I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n    return isMovingHorizontally(event, gestureState) && (diffX >= DEAD_ZONE && currentIndexRef.current > 0 || diffX <= -DEAD_ZONE && currentIndexRef.current < routes.length - 1);\n  };\n  var startGesture = function startGesture() {\n    onSwipeStart === null || onSwipeStart === void 0 ? void 0 : onSwipeStart();\n    if (keyboardDismissMode === 'on-drag') {\n      _reactNative.Keyboard.dismiss();\n    }\n    panX.stopAnimation();\n    panX.setOffset(panX._value);\n  };\n  var respondToGesture = function respondToGesture(_, gestureState) {\n    var diffX = _reactNative.I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n    if (diffX > 0 && index <= 0 || diffX < 0 && index >= routes.length - 1) {\n      return;\n    }\n    if (layout.width) {\n      var _position = (panX._offset + diffX) / -layout.width;\n      var next = _position > index ? Math.ceil(_position) : Math.floor(_position);\n      if (next !== index) {\n        listenersRef.current.forEach(function (listener) {\n          return listener(next);\n        });\n      }\n    }\n    panX.setValue(diffX);\n  };\n  var finishGesture = function finishGesture(_, gestureState) {\n    panX.flattenOffset();\n    onSwipeEnd === null || onSwipeEnd === void 0 ? void 0 : onSwipeEnd();\n    var currentIndex = typeof pendingIndexRef.current === 'number' ? pendingIndexRef.current : currentIndexRef.current;\n    var nextIndex = currentIndex;\n    if (Math.abs(gestureState.dx) > Math.abs(gestureState.dy) && Math.abs(gestureState.vx) > Math.abs(gestureState.vy) && (Math.abs(gestureState.dx) > swipeDistanceThreshold || Math.abs(gestureState.vx) > swipeVelocityThreshold)) {\n      nextIndex = Math.round(Math.min(Math.max(0, _reactNative.I18nManager.isRTL ? currentIndex + gestureState.dx / Math.abs(gestureState.dx) : currentIndex - gestureState.dx / Math.abs(gestureState.dx)), routes.length - 1));\n      currentIndexRef.current = nextIndex;\n    }\n    if (!isFinite(nextIndex)) {\n      nextIndex = currentIndex;\n    }\n    jumpToIndex(nextIndex, true);\n  };\n  var addEnterListener = React.useCallback(function (listener) {\n    listenersRef.current.push(listener);\n    return function () {\n      var index = listenersRef.current.indexOf(listener);\n      if (index > -1) {\n        listenersRef.current.splice(index, 1);\n      }\n    };\n  }, []);\n  var jumpTo = React.useCallback(function (key) {\n    var index = navigationStateRef.current.routes.findIndex(function (route) {\n      return route.key === key;\n    });\n    jumpToIndex(index);\n  }, [jumpToIndex]);\n  var panResponder = _reactNative.PanResponder.create({\n    onMoveShouldSetPanResponder: canMoveScreen,\n    onMoveShouldSetPanResponderCapture: canMoveScreen,\n    onPanResponderGrant: startGesture,\n    onPanResponderMove: respondToGesture,\n    onPanResponderTerminate: finishGesture,\n    onPanResponderRelease: finishGesture,\n    onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n      return true;\n    }\n  });\n  var maxTranslate = layout.width * (routes.length - 1);\n  var translateX = _reactNative.Animated.multiply(panX.interpolate({\n    inputRange: [-maxTranslate, 0],\n    outputRange: [-maxTranslate, 0],\n    extrapolate: 'clamp'\n  }), _reactNative.I18nManager.isRTL ? -1 : 1);\n  var position = React.useMemo(function () {\n    return layout.width ? _reactNative.Animated.divide(panX, -layout.width) : null;\n  }, [layout.width, panX]);\n  return children({\n    position: position != null ? position : new _reactNative.Animated.Value(index),\n    addEnterListener: addEnterListener,\n    jumpTo: jumpTo,\n    render: function render(children) {\n      return React.createElement(_reactNative.Animated.View, _extends({\n        style: [styles.sheet, layout.width ? {\n          width: routes.length * layout.width,\n          transform: [{\n            translateX: translateX\n          }]\n        } : null, style]\n      }, panResponder.panHandlers), React.Children.map(children, function (child, i) {\n        var route = routes[i];\n        var focused = i === index;\n        return React.createElement(_reactNative.View, {\n          key: route.key,\n          style: layout.width ? {\n            width: layout.width\n          } : focused ? _reactNative.StyleSheet.absoluteFill : null\n        }, focused || layout.width ? child : null);\n      }));\n    }\n  });\n}\nvar styles = _reactNative.StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch'\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_useAnimatedValue","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","DEAD_ZONE","DefaultTransitionSpec","timing","Animated","spring","stiffness","damping","mass","overshootClamping","PanResponderAdapter","_ref","layout","_ref$keyboardDismissM","keyboardDismissMode","_ref$swipeEnabled","swipeEnabled","navigationState","onIndexChange","onSwipeStart","onSwipeEnd","children","style","_ref$animationEnabled","animationEnabled","routes","index","panX","useAnimatedValue","listenersRef","useRef","navigationStateRef","layoutRef","onIndexChangeRef","currentIndexRef","pendingIndexRef","swipeVelocityThreshold","swipeDistanceThreshold","width","jumpToIndex","useCallback","animate","arguments","length","undefined","offset","current","transitionConfig","_objectWithoutProperties2","parallel","assign","toValue","useNativeDriver","start","_ref2","finished","setValue","useEffect","Keyboard","dismiss","isMovingHorizontally","_","gestureState","Math","abs","dx","dy","vx","vy","canMoveScreen","event","diffX","I18nManager","isRTL","startGesture","stopAnimation","setOffset","_value","respondToGesture","position","_offset","next","ceil","floor","forEach","listener","finishGesture","flattenOffset","currentIndex","nextIndex","round","min","max","isFinite","addEnterListener","push","indexOf","splice","jumpTo","findIndex","route","panResponder","PanResponder","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminate","onPanResponderRelease","onPanResponderTerminationRequest","maxTranslate","translateX","multiply","interpolate","inputRange","outputRange","extrapolate","useMemo","divide","Value","render","createElement","View","_extends","styles","sheet","transform","panHandlers","Children","map","child","i","focused","StyleSheet","absoluteFill","flex","flexDirection","alignItems"],"sources":["C:\\Users\\SIAM\\Downloads\\React-WeDo-v1.0-6-March-2023\\package\\node_modules\\react-native-tab-view\\src\\PanResponderAdapter.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  I18nManager,\n  Keyboard,\n  PanResponder,\n  PanResponderGestureState,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport type {\n  EventEmitterProps,\n  Layout,\n  Listener,\n  NavigationState,\n  PagerProps,\n  Route,\n} from './types';\nimport { useAnimatedValue } from './useAnimatedValue';\n\ntype Props<T extends Route> = PagerProps & {\n  layout: Layout;\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  children: (\n    props: EventEmitterProps & {\n      // Animated value which represents the state of current index\n      // It can include fractional digits as it represents the intermediate value\n      position: Animated.AnimatedInterpolation<number>;\n      // Function to actually render the content of the pager\n      // The parent component takes care of rendering\n      render: (children: React.ReactNode) => React.ReactNode;\n      // Callback to call when switching the tab\n      // The tab switch animation is performed even if the index in state is unchanged\n      jumpTo: (key: string) => void;\n    }\n  ) => React.ReactElement;\n};\n\nconst DEAD_ZONE = 12;\n\nconst DefaultTransitionSpec = {\n  timing: Animated.spring,\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true,\n};\n\nexport function PanResponderAdapter<T extends Route>({\n  layout,\n  keyboardDismissMode = 'auto',\n  swipeEnabled = true,\n  navigationState,\n  onIndexChange,\n  onSwipeStart,\n  onSwipeEnd,\n  children,\n  style,\n  animationEnabled = false,\n}: Props<T>) {\n  const { routes, index } = navigationState;\n\n  const panX = useAnimatedValue(0);\n\n  const listenersRef = React.useRef<Listener[]>([]);\n\n  const navigationStateRef = React.useRef(navigationState);\n  const layoutRef = React.useRef(layout);\n  const onIndexChangeRef = React.useRef(onIndexChange);\n\n  const currentIndexRef = React.useRef(index);\n  const pendingIndexRef = React.useRef<number>();\n\n  const swipeVelocityThreshold = 0.15;\n  const swipeDistanceThreshold = layout.width / 1.75;\n\n  const jumpToIndex = React.useCallback(\n    (index: number, animate = animationEnabled) => {\n      const offset = -index * layoutRef.current.width;\n\n      const { timing, ...transitionConfig } = DefaultTransitionSpec;\n\n      if (animate) {\n        Animated.parallel([\n          timing(panX, {\n            ...transitionConfig,\n            toValue: offset,\n            useNativeDriver: false,\n          }),\n        ]).start(({ finished }) => {\n          if (finished) {\n            onIndexChangeRef.current(index);\n            pendingIndexRef.current = undefined;\n          }\n        });\n        pendingIndexRef.current = index;\n      } else {\n        panX.setValue(offset);\n        onIndexChangeRef.current(index);\n        pendingIndexRef.current = undefined;\n      }\n    },\n    [animationEnabled, panX]\n  );\n\n  React.useEffect(() => {\n    navigationStateRef.current = navigationState;\n    layoutRef.current = layout;\n    onIndexChangeRef.current = onIndexChange;\n  });\n\n  React.useEffect(() => {\n    const offset = -navigationStateRef.current.index * layout.width;\n\n    panX.setValue(offset);\n  }, [layout.width, panX]);\n\n  React.useEffect(() => {\n    if (keyboardDismissMode === 'auto') {\n      Keyboard.dismiss();\n    }\n\n    if (layout.width && currentIndexRef.current !== index) {\n      currentIndexRef.current = index;\n      jumpToIndex(index);\n    }\n  }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n\n  const isMovingHorizontally = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    return (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2)\n    );\n  };\n\n  const canMoveScreen = (\n    event: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    if (swipeEnabled === false) {\n      return false;\n    }\n\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    return (\n      isMovingHorizontally(event, gestureState) &&\n      ((diffX >= DEAD_ZONE && currentIndexRef.current > 0) ||\n        (diffX <= -DEAD_ZONE && currentIndexRef.current < routes.length - 1))\n    );\n  };\n\n  const startGesture = () => {\n    onSwipeStart?.();\n\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n\n    panX.stopAnimation();\n    // @ts-expect-error: _value is private, but docs use it as well\n    panX.setOffset(panX._value);\n  };\n\n  const respondToGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    if (\n      // swiping left\n      (diffX > 0 && index <= 0) ||\n      // swiping right\n      (diffX < 0 && index >= routes.length - 1)\n    ) {\n      return;\n    }\n\n    if (layout.width) {\n      // @ts-expect-error: _offset is private, but docs use it as well\n      const position = (panX._offset + diffX) / -layout.width;\n      const next =\n        position > index ? Math.ceil(position) : Math.floor(position);\n\n      if (next !== index) {\n        listenersRef.current.forEach((listener) => listener(next));\n      }\n    }\n\n    panX.setValue(diffX);\n  };\n\n  const finishGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    panX.flattenOffset();\n\n    onSwipeEnd?.();\n\n    const currentIndex =\n      typeof pendingIndexRef.current === 'number'\n        ? pendingIndexRef.current\n        : currentIndexRef.current;\n\n    let nextIndex = currentIndex;\n\n    if (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy) &&\n      (Math.abs(gestureState.dx) > swipeDistanceThreshold ||\n        Math.abs(gestureState.vx) > swipeVelocityThreshold)\n    ) {\n      nextIndex = Math.round(\n        Math.min(\n          Math.max(\n            0,\n            I18nManager.isRTL\n              ? currentIndex + gestureState.dx / Math.abs(gestureState.dx)\n              : currentIndex - gestureState.dx / Math.abs(gestureState.dx)\n          ),\n          routes.length - 1\n        )\n      );\n\n      currentIndexRef.current = nextIndex;\n    }\n\n    if (!isFinite(nextIndex)) {\n      nextIndex = currentIndex;\n    }\n\n    jumpToIndex(nextIndex, true);\n  };\n\n  // TODO: use the listeners\n  const addEnterListener = React.useCallback((listener: Listener) => {\n    listenersRef.current.push(listener);\n\n    return () => {\n      const index = listenersRef.current.indexOf(listener);\n\n      if (index > -1) {\n        listenersRef.current.splice(index, 1);\n      }\n    };\n  }, []);\n\n  const jumpTo = React.useCallback(\n    (key: string) => {\n      const index = navigationStateRef.current.routes.findIndex(\n        (route: { key: string }) => route.key === key\n      );\n\n      jumpToIndex(index);\n    },\n    [jumpToIndex]\n  );\n\n  const panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: canMoveScreen,\n    onMoveShouldSetPanResponderCapture: canMoveScreen,\n    onPanResponderGrant: startGesture,\n    onPanResponderMove: respondToGesture,\n    onPanResponderTerminate: finishGesture,\n    onPanResponderRelease: finishGesture,\n    onPanResponderTerminationRequest: () => true,\n  });\n\n  const maxTranslate = layout.width * (routes.length - 1);\n  const translateX = Animated.multiply(\n    panX.interpolate({\n      inputRange: [-maxTranslate, 0],\n      outputRange: [-maxTranslate, 0],\n      extrapolate: 'clamp',\n    }),\n    I18nManager.isRTL ? -1 : 1\n  );\n\n  const position = React.useMemo(\n    () => (layout.width ? Animated.divide(panX, -layout.width) : null),\n    [layout.width, panX]\n  );\n\n  return children({\n    position: position ?? new Animated.Value(index),\n    addEnterListener,\n    jumpTo,\n    render: (children) => (\n      <Animated.View\n        style={[\n          styles.sheet,\n          layout.width\n            ? {\n                width: routes.length * layout.width,\n                transform: [{ translateX }],\n              }\n            : null,\n          style,\n        ]}\n        {...panResponder.panHandlers}\n      >\n        {React.Children.map(children, (child, i) => {\n          const route = routes[i];\n          const focused = i === index;\n\n          return (\n            <View\n              key={route.key}\n              style={\n                layout.width\n                  ? { width: layout.width }\n                  : focused\n                  ? StyleSheet.absoluteFill\n                  : null\n              }\n            >\n              {focused || layout.width ? child : null}\n            </View>\n          );\n        })}\n      </Animated.View>\n    ),\n  });\n}\n\nconst styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}