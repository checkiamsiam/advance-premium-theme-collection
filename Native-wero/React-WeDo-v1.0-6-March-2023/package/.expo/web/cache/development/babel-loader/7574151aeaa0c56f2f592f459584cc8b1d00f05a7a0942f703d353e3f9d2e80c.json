{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _Header = _interopRequireDefault(require(\"../../layout/Header\"));\nvar _SwipeBox = _interopRequireDefault(require(\"../../components/SwipeBox\"));\nvar _theme = require(\"../../constants/theme\");\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\SIAM\\\\Downloads\\\\React-WeDo-v1.0-6-March-2023\\\\package\\\\app\\\\Screens\\\\Components\\\\Swipeable.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar SwipeData = [{\n  id: \"1\",\n  title: \"swipe content list item 1\"\n}, {\n  id: \"2\",\n  title: \"swipe content list item 2\"\n}, {\n  id: \"3\",\n  title: \"swipe content list item 3\"\n}, {\n  id: \"4\",\n  title: \"swipe content list item 4\"\n}, {\n  id: \"5\",\n  title: \"swipe content list item 5\"\n}, {\n  id: \"6\",\n  title: \"swipe content list item 6\"\n}, {\n  id: \"7\",\n  title: \"swipe content list item 7\"\n}, {\n  id: \"8\",\n  title: \"swipe content list item 8\"\n}, {\n  id: \"9\",\n  title: \"swipe content list item 9\"\n}, {\n  id: \"10\",\n  title: \"swipe content list item 10\"\n}];\nvar SwipeableScreen = function SwipeableScreen() {\n  var _useState = (0, _react.useState)(SwipeData),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    lists = _useState2[0],\n    setLists = _useState2[1];\n  var deleteItem = function deleteItem(index) {\n    _reactNative.LayoutAnimation.configureNext(_reactNative.LayoutAnimation.Presets.spring);\n    var arr = (0, _toConsumableArray2.default)(lists);\n    arr.splice(index, 1);\n    setLists(arr);\n  };\n  return (0, _jsxRuntime.jsxs)(_reactNative.SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: _theme.COLORS.backgroundColor\n    },\n    children: [(0, _jsxRuntime.jsx)(_Header.default, {\n      leftIcon: 'back',\n      title: 'Swipeable',\n      titleLeft: true\n    }), (0, _jsxRuntime.jsx)(_reactNativeGestureHandler.GestureHandlerRootView, {\n      style: {\n        flex: 1\n      },\n      children: (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {\n        contentContainerStyle: {\n          paddingVertical: 15\n        },\n        children: lists.map(function (data, index) {\n          return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n            children: [(0, _jsxRuntime.jsx)(_SwipeBox.default, {\n              data: data,\n              handleDelete: function handleDelete() {\n                return deleteItem(index);\n              }\n            }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n              style: {\n                height: 1,\n                width: '100%',\n                backgroundColor: _theme.COLORS.borderColor\n              }\n            })]\n          }, index);\n        })\n      })\n    })]\n  });\n};\nvar _default = SwipeableScreen;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_Header","_interopRequireDefault","_SwipeBox","_theme","_reactNativeGestureHandler","_jsxRuntime","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","SwipeData","id","title","SwipeableScreen","_useState","useState","_useState2","_slicedToArray2","lists","setLists","deleteItem","index","LayoutAnimation","configureNext","Presets","spring","arr","_toConsumableArray2","splice","jsxs","SafeAreaView","style","flex","backgroundColor","COLORS","children","jsx","leftIcon","titleLeft","GestureHandlerRootView","ScrollView","contentContainerStyle","paddingVertical","map","data","View","handleDelete","height","width","borderColor","_default","exports"],"sources":["C:/Users/SIAM/Downloads/React-WeDo-v1.0-6-March-2023/package/app/Screens/Components/Swipeable.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { LayoutAnimation, SafeAreaView, ScrollView, View } from 'react-native';\r\nimport Header from '../../layout/Header';\r\nimport SwipeBox from '../../components/SwipeBox';\r\nimport { COLORS } from '../../constants/theme';\r\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\r\n\r\nconst SwipeData = [\r\n    {\r\n        id : \"1\",\r\n        title : \"swipe content list item 1\",\r\n    },\r\n    {\r\n        id : \"2\",\r\n        title : \"swipe content list item 2\",\r\n    },\r\n    {\r\n        id : \"3\",\r\n        title : \"swipe content list item 3\",\r\n    },\r\n    {\r\n        id : \"4\",\r\n        title : \"swipe content list item 4\",\r\n    },\r\n    {\r\n        id : \"5\",\r\n        title : \"swipe content list item 5\",\r\n    },\r\n    {\r\n        id : \"6\",\r\n        title : \"swipe content list item 6\",\r\n    },\r\n    {\r\n        id : \"7\",\r\n        title : \"swipe content list item 7\",\r\n    },\r\n    {\r\n        id : \"8\",\r\n        title : \"swipe content list item 8\",\r\n    },\r\n    {\r\n        id : \"9\",\r\n        title : \"swipe content list item 9\",\r\n    },\r\n    {\r\n        id : \"10\",\r\n        title : \"swipe content list item 10\",\r\n    },\r\n]\r\nconst SwipeableScreen = () => {\r\n\r\n    const [lists, setLists] = useState(SwipeData);\r\n\r\n    const deleteItem = (index) => {\r\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.spring)\r\n        const arr = [...lists];\r\n        arr.splice(index, 1);\r\n        setLists(arr);\r\n    };\r\n    return (\r\n        <SafeAreaView style={{\r\n            flex:1,\r\n            backgroundColor:COLORS.backgroundColor,\r\n        }}>\r\n            <Header\r\n                leftIcon={'back'}\r\n                title ={'Swipeable'}\r\n                titleLeft\r\n            />\r\n            <GestureHandlerRootView style={{ flex: 1 }}>\r\n                <ScrollView contentContainerStyle={{paddingVertical:15}}>\r\n                    {lists.map((data,index) => {\r\n                        return(\r\n                            <View\r\n                                key={index}\r\n                            >\r\n                                <SwipeBox data={data} handleDelete={() => deleteItem(index)} />\r\n                                <View\r\n                                    style={{\r\n                                        height:1,\r\n                                        width:'100%',\r\n                                        backgroundColor:COLORS.borderColor,\r\n                                    }}\r\n                                />\r\n                            </View>\r\n                        )\r\n                    })}\r\n                </ScrollView>\r\n            </GestureHandlerRootView>\r\n\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nexport default SwipeableScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}