{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.IconAdornment = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _theming = require(\"../../../core/theming\");\nvar _IconButton = _interopRequireDefault(require(\"../../IconButton/IconButton\"));\nvar _constants = require(\"../constants\");\nvar _helpers = require(\"../helpers\");\nvar _utils = require(\"./utils\");\nvar _excluded = [\"icon\", \"onPress\", \"forceTextInputFocus\", \"color\", \"theme\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar StyleContext = _react.default.createContext({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: function forceFocus() {},\n  testID: ''\n});\nvar IconAdornment = function IconAdornment(_ref) {\n  var icon = _ref.icon,\n    topPosition = _ref.topPosition,\n    side = _ref.side,\n    isTextInputFocused = _ref.isTextInputFocused,\n    forceFocus = _ref.forceFocus,\n    testID = _ref.testID,\n    themeOverrides = _ref.theme,\n    disabled = _ref.disabled;\n  var _useInternalTheme = (0, _theming.useInternalTheme)(themeOverrides),\n    isV3 = _useInternalTheme.isV3;\n  var _getConstants = (0, _helpers.getConstants)(isV3),\n    ICON_OFFSET = _getConstants.ICON_OFFSET;\n  var style = (0, _defineProperty2.default)({\n    top: topPosition\n  }, side, ICON_OFFSET);\n  var contextState = {\n    style: style,\n    isTextInputFocused: isTextInputFocused,\n    forceFocus: forceFocus,\n    testID: testID,\n    disabled: disabled\n  };\n  return _react.default.createElement(StyleContext.Provider, {\n    value: contextState\n  }, icon);\n};\nexports.IconAdornment = IconAdornment;\nvar TextInputIcon = function TextInputIcon(_ref2) {\n  var icon = _ref2.icon,\n    onPress = _ref2.onPress,\n    forceTextInputFocus = _ref2.forceTextInputFocus,\n    color = _ref2.color,\n    themeOverrides = _ref2.theme,\n    rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded);\n  var _React$useContext = _react.default.useContext(StyleContext),\n    style = _React$useContext.style,\n    isTextInputFocused = _React$useContext.isTextInputFocused,\n    forceFocus = _React$useContext.forceFocus,\n    testID = _React$useContext.testID,\n    disabled = _React$useContext.disabled;\n  var onPressWithFocusControl = _react.default.useCallback(function (e) {\n    if (forceTextInputFocus && !isTextInputFocused) {\n      forceFocus();\n    }\n    onPress === null || onPress === void 0 ? void 0 : onPress(e);\n  }, [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var iconColor = (0, _utils.getIconColor)({\n    theme: theme,\n    disabled: disabled\n  });\n  return _react.default.createElement(_reactNative.View, {\n    style: [styles.container, style]\n  }, _react.default.createElement(_IconButton.default, _extends({\n    icon: icon,\n    style: styles.iconButton,\n    size: _constants.ICON_SIZE,\n    onPress: onPressWithFocusControl,\n    iconColor: typeof color === 'function' ? color(isTextInputFocused) : iconColor,\n    testID: testID,\n    theme: themeOverrides\n  }, rest)));\n};\nTextInputIcon.displayName = 'TextInput.Icon';\nTextInputIcon.defaultProps = {\n  forceTextInputFocus: true\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: _constants.ICON_SIZE,\n    height: _constants.ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  iconButton: {\n    margin: 0\n  }\n});\nvar _default = TextInputIcon;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_theming","_IconButton","_constants","_helpers","_utils","_excluded","StyleContext","React","createContext","style","isTextInputFocused","forceFocus","testID","IconAdornment","_ref","icon","topPosition","side","themeOverrides","theme","disabled","_useInternalTheme","useInternalTheme","isV3","_getConstants","getConstants","ICON_OFFSET","_defineProperty2","default","top","contextState","createElement","Provider","value","exports","TextInputIcon","_ref2","onPress","forceTextInputFocus","color","rest","_objectWithoutProperties2","_React$useContext","useContext","onPressWithFocusControl","useCallback","e","iconColor","getIconColor","View","styles","container","IconButton","_extends","iconButton","size","ICON_SIZE","displayName","defaultProps","StyleSheet","create","position","width","height","justifyContent","alignItems","margin","_default"],"sources":["C:\\Users\\SIAM\\Downloads\\React-WeDo-v1.0-6-March-2023\\package\\node_modules\\react-native-paper\\src\\components\\TextInput\\Adornment\\TextInputIcon.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../../core/theming';\nimport type { $Omit, ThemeProp } from '../../../types';\nimport type { IconSource } from '../../Icon';\nimport IconButton from '../../IconButton/IconButton';\nimport { ICON_SIZE } from '../constants';\nimport { getConstants } from '../helpers';\nimport { getIconColor } from './utils';\n\nexport type Props = $Omit<\n  React.ComponentProps<typeof IconButton>,\n  'icon' | 'theme' | 'color'\n> & {\n  /**\n   * @renamed Renamed from 'name' to 'icon` in v5.x\n   * Icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the TextInput will focus after onPress.\n   */\n  forceTextInputFocus?: boolean;\n  /**\n   * Color of the icon or a function receiving a boolean indicating whether the TextInput is focused and returning the color.\n   */\n  color?: ((isTextInputFocused: boolean) => string | undefined) | string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype StyleContextType = {\n  style: StyleProp<ViewStyle>;\n  isTextInputFocused: boolean;\n  forceFocus: () => void;\n  testID: string;\n  disabled?: boolean;\n};\n\nconst StyleContext = React.createContext<StyleContextType>({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: () => {},\n  testID: '',\n});\n\nconst IconAdornment: React.FunctionComponent<\n  {\n    testID: string;\n    icon: React.ReactNode;\n    topPosition: number;\n    side: 'left' | 'right';\n    theme?: ThemeProp;\n    disabled?: boolean;\n  } & Omit<StyleContextType, 'style'>\n> = ({\n  icon,\n  topPosition,\n  side,\n  isTextInputFocused,\n  forceFocus,\n  testID,\n  theme: themeOverrides,\n  disabled,\n}) => {\n  const { isV3 } = useInternalTheme(themeOverrides);\n  const { ICON_OFFSET } = getConstants(isV3);\n\n  const style = {\n    top: topPosition,\n    [side]: ICON_OFFSET,\n  };\n  const contextState = {\n    style,\n    isTextInputFocused,\n    forceFocus,\n    testID,\n    disabled,\n  };\n\n  return (\n    <StyleContext.Provider value={contextState}>{icon}</StyleContext.Provider>\n  );\n};\n\n/**\n * A component to render a leading / trailing icon in the TextInput\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/textinput-flat.icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       label=\"Password\"\n *       secureTextEntry\n *       right={<TextInput.Icon icon=\"eye\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputIcon = ({\n  icon,\n  onPress,\n  forceTextInputFocus,\n  color,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const { style, isTextInputFocused, forceFocus, testID, disabled } =\n    React.useContext(StyleContext);\n\n  const onPressWithFocusControl = React.useCallback(\n    (e: GestureResponderEvent) => {\n      if (forceTextInputFocus && !isTextInputFocused) {\n        forceFocus();\n      }\n\n      onPress?.(e);\n    },\n    [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]\n  );\n\n  const theme = useInternalTheme(themeOverrides);\n\n  const iconColor = getIconColor({ theme, disabled });\n\n  return (\n    <View style={[styles.container, style]}>\n      <IconButton\n        icon={icon}\n        style={styles.iconButton}\n        size={ICON_SIZE}\n        onPress={onPressWithFocusControl}\n        iconColor={\n          typeof color === 'function' ? color(isTextInputFocused) : iconColor\n        }\n        testID={testID}\n        theme={themeOverrides}\n        {...rest}\n      />\n    </View>\n  );\n};\nTextInputIcon.displayName = 'TextInput.Icon';\n\nTextInputIcon.defaultProps = {\n  forceTextInputFocus: true,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconButton: {\n    margin: 0,\n  },\n});\n\nexport default TextInputIcon;\n\n// @component-docs ignore-next-line\nexport { IconAdornment };\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}