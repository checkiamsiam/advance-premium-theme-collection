{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _theming = require(\"../core/theming\");\nvar _overlay = _interopRequireWildcard(require(\"../styles/overlay\"));\nvar _shadow = _interopRequireDefault(require(\"../styles/shadow\"));\nvar _forwardRef = require(\"../utils/forwardRef\");\nvar _splitStyles3 = require(\"../utils/splitStyles\");\nvar _excluded = [\"style\", \"theme\"],\n  _excluded2 = [\"elevation\", \"style\", \"backgroundColor\", \"testID\", \"children\", \"mode\"],\n  _excluded3 = [\"position\", \"alignSelf\", \"top\", \"left\", \"right\", \"bottom\", \"start\", \"end\", \"flex\", \"backgroundColor\", \"width\", \"height\", \"transform\", \"opacity\"],\n  _excluded4 = [\"elevation\", \"children\", \"theme\", \"style\", \"testID\", \"mode\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar MD2Surface = (0, _forwardRef.forwardRef)(function (_ref, ref) {\n  var style = _ref.style,\n    overrideTheme = _ref.theme,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var _ref4 = _reactNative.StyleSheet.flatten(style) || {},\n    _ref4$elevation = _ref4.elevation,\n    elevation = _ref4$elevation === void 0 ? 4 : _ref4$elevation;\n  var _useInternalTheme = (0, _theming.useInternalTheme)(overrideTheme),\n    isDarkTheme = _useInternalTheme.dark,\n    mode = _useInternalTheme.mode,\n    colors = _useInternalTheme.colors;\n  return React.createElement(_reactNative.Animated.View, _extends({\n    ref: ref\n  }, rest, {\n    style: [{\n      backgroundColor: isDarkTheme && mode === 'adaptive' ? (0, _overlay.default)(elevation, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.surface\n    }, elevation ? (0, _shadow.default)(elevation) : null, style]\n  }));\n});\nvar shadowColor = '#000';\nvar iOSShadowOutputRanges = [{\n  shadowOpacity: 0.15,\n  height: [0, 1, 2, 4, 6, 8],\n  shadowRadius: [0, 3, 6, 8, 10, 12]\n}, {\n  shadowOpacity: 0.3,\n  height: [0, 1, 1, 1, 2, 4],\n  shadowRadius: [0, 1, 2, 3, 3, 4]\n}];\nvar inputRange = [0, 1, 2, 3, 4, 5];\nfunction getStyleForShadowLayer(elevation, layer) {\n  if ((0, _overlay.isAnimatedValue)(elevation)) {\n    return {\n      shadowColor: shadowColor,\n      shadowOpacity: elevation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n        extrapolate: 'clamp'\n      }),\n      shadowOffset: {\n        width: 0,\n        height: elevation.interpolate({\n          inputRange: inputRange,\n          outputRange: iOSShadowOutputRanges[layer].height\n        })\n      },\n      shadowRadius: elevation.interpolate({\n        inputRange: inputRange,\n        outputRange: iOSShadowOutputRanges[layer].shadowRadius\n      })\n    };\n  }\n  return {\n    shadowColor: shadowColor,\n    shadowOpacity: elevation ? iOSShadowOutputRanges[layer].shadowOpacity : 0,\n    shadowOffset: {\n      width: 0,\n      height: iOSShadowOutputRanges[layer].height[elevation]\n    },\n    shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation]\n  };\n}\nvar SurfaceIOS = (0, _forwardRef.forwardRef)(function (_ref2, ref) {\n  var elevation = _ref2.elevation,\n    style = _ref2.style,\n    backgroundColor = _ref2.backgroundColor,\n    testID = _ref2.testID,\n    children = _ref2.children,\n    _ref2$mode = _ref2.mode,\n    mode = _ref2$mode === void 0 ? 'elevated' : _ref2$mode,\n    props = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);\n  var _React$useMemo = React.useMemo(function () {\n      var _ref5 = _reactNative.StyleSheet.flatten(style) || {},\n        position = _ref5.position,\n        alignSelf = _ref5.alignSelf,\n        top = _ref5.top,\n        left = _ref5.left,\n        right = _ref5.right,\n        bottom = _ref5.bottom,\n        start = _ref5.start,\n        end = _ref5.end,\n        flex = _ref5.flex,\n        backgroundColorStyle = _ref5.backgroundColor,\n        width = _ref5.width,\n        height = _ref5.height,\n        transform = _ref5.transform,\n        opacity = _ref5.opacity,\n        restStyle = (0, _objectWithoutProperties2.default)(_ref5, _excluded3);\n      var _splitStyles = (0, _splitStyles3.splitStyles)(restStyle, function (style) {\n          return style.startsWith('margin');\n        }, function (style) {\n          return style.startsWith('border') && style.endsWith('Radius');\n        }),\n        _splitStyles2 = (0, _slicedToArray2.default)(_splitStyles, 3),\n        filteredStyles = _splitStyles2[0],\n        marginStyles = _splitStyles2[1],\n        borderRadiusStyles = _splitStyles2[2];\n      if (process.env.NODE_ENV !== 'production' && filteredStyles.overflow === 'hidden' && elevation !== 0) {\n        console.warn('When setting overflow to hidden on Surface the shadow will not be displayed correctly. Wrap the content of your component in a separate View with the overflow style.');\n      }\n      var bgColor = backgroundColorStyle || backgroundColor;\n      var isElevated = mode === 'elevated';\n      var outerLayerViewStyles = Object.assign({}, isElevated && getStyleForShadowLayer(elevation, 0), marginStyles, borderRadiusStyles, {\n        position: position,\n        alignSelf: alignSelf,\n        top: top,\n        right: right,\n        bottom: bottom,\n        left: left,\n        start: start,\n        end: end,\n        flex: flex,\n        width: width,\n        height: height,\n        transform: transform,\n        opacity: opacity,\n        backgroundColor: bgColor\n      });\n      var innerLayerViewStyles = Object.assign({}, isElevated && getStyleForShadowLayer(elevation, 1), filteredStyles, borderRadiusStyles, {\n        flex: height ? 1 : undefined,\n        backgroundColor: bgColor\n      });\n      return [outerLayerViewStyles, innerLayerViewStyles];\n    }, [style, elevation, backgroundColor, mode]),\n    _React$useMemo2 = (0, _slicedToArray2.default)(_React$useMemo, 2),\n    outerLayerViewStyles = _React$useMemo2[0],\n    innerLayerViewStyles = _React$useMemo2[1];\n  return React.createElement(_reactNative.Animated.View, {\n    ref: ref,\n    style: outerLayerViewStyles,\n    testID: testID + \"-outer-layer\"\n  }, React.createElement(_reactNative.Animated.View, _extends({}, props, {\n    style: innerLayerViewStyles,\n    testID: testID\n  }), children));\n});\nvar Surface = (0, _forwardRef.forwardRef)(function (_ref3, ref) {\n  var _ref3$elevation = _ref3.elevation,\n    elevation = _ref3$elevation === void 0 ? 1 : _ref3$elevation,\n    children = _ref3.children,\n    overridenTheme = _ref3.theme,\n    style = _ref3.style,\n    _ref3$testID = _ref3.testID,\n    testID = _ref3$testID === void 0 ? 'surface' : _ref3$testID,\n    _ref3$mode = _ref3.mode,\n    mode = _ref3$mode === void 0 ? 'elevated' : _ref3$mode,\n    props = (0, _objectWithoutProperties2.default)(_ref3, _excluded4);\n  var theme = (0, _theming.useInternalTheme)(overridenTheme);\n  if (!theme.isV3) return React.createElement(MD2Surface, _extends({}, props, {\n    theme: theme,\n    style: style,\n    ref: ref\n  }), children);\n  var colors = theme.colors;\n  var inputRange = [0, 1, 2, 3, 4, 5];\n  var backgroundColor = function () {\n    var _colors$elevation2;\n    if ((0, _overlay.isAnimatedValue)(elevation)) {\n      return elevation.interpolate({\n        inputRange: inputRange,\n        outputRange: inputRange.map(function (elevation) {\n          var _colors$elevation;\n          return (_colors$elevation = colors.elevation) === null || _colors$elevation === void 0 ? void 0 : _colors$elevation[\"level\" + elevation];\n        })\n      });\n    }\n    return (_colors$elevation2 = colors.elevation) === null || _colors$elevation2 === void 0 ? void 0 : _colors$elevation2[\"level\" + elevation];\n  }();\n  var isElevated = mode === 'elevated';\n  if (_reactNative.Platform.OS === 'web') {\n    return React.createElement(_reactNative.Animated.View, _extends({}, props, {\n      ref: ref,\n      testID: testID,\n      style: [{\n        backgroundColor: backgroundColor\n      }, elevation && isElevated ? (0, _shadow.default)(elevation, theme.isV3) : null, style]\n    }), children);\n  }\n  if (_reactNative.Platform.OS === 'android') {\n    var elevationLevel = [0, 3, 6, 9, 12, 15];\n    var getElevationAndroid = function getElevationAndroid() {\n      if ((0, _overlay.isAnimatedValue)(elevation)) {\n        return elevation.interpolate({\n          inputRange: inputRange,\n          outputRange: elevationLevel\n        });\n      }\n      return elevationLevel[elevation];\n    };\n    var _ref6 = _reactNative.StyleSheet.flatten(style) || {},\n      margin = _ref6.margin,\n      padding = _ref6.padding,\n      transform = _ref6.transform,\n      borderRadius = _ref6.borderRadius;\n    var outerLayerStyles = {\n      margin: margin,\n      padding: padding,\n      transform: transform,\n      borderRadius: borderRadius\n    };\n    var sharedStyle = [{\n      backgroundColor: backgroundColor\n    }, style];\n    return React.createElement(_reactNative.Animated.View, _extends({}, props, {\n      testID: testID,\n      ref: ref,\n      style: [{\n        backgroundColor: backgroundColor,\n        transform: transform\n      }, outerLayerStyles, sharedStyle, isElevated && {\n        elevation: getElevationAndroid()\n      }]\n    }), children);\n  }\n  return React.createElement(SurfaceIOS, _extends({}, props, {\n    ref: ref,\n    elevation: elevation,\n    backgroundColor: backgroundColor,\n    style: style,\n    testID: testID,\n    mode: mode\n  }), children);\n});\nvar _default = Surface;\nexports.default = _default;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_theming","_overlay","_shadow","_interopRequireDefault","_forwardRef","_splitStyles3","_excluded","_excluded2","_excluded3","_excluded4","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","MD2Surface","forwardRef","_ref","ref","style","overrideTheme","theme","rest","_objectWithoutProperties2","_ref4","StyleSheet","flatten","_ref4$elevation","elevation","_useInternalTheme","useInternalTheme","isDarkTheme","dark","mode","colors","createElement","Animated","View","_extends","backgroundColor","overlay","surface","shadow","shadowColor","iOSShadowOutputRanges","shadowOpacity","height","shadowRadius","inputRange","getStyleForShadowLayer","layer","isAnimatedValue","interpolate","outputRange","extrapolate","shadowOffset","width","SurfaceIOS","_ref2","testID","children","_ref2$mode","props","_React$useMemo","useMemo","_ref5","position","alignSelf","top","left","right","bottom","start","end","flex","backgroundColorStyle","transform","opacity","restStyle","_splitStyles","splitStyles","startsWith","endsWith","_splitStyles2","_slicedToArray2","filteredStyles","marginStyles","borderRadiusStyles","process","env","NODE_ENV","overflow","console","warn","bgColor","isElevated","outerLayerViewStyles","assign","innerLayerViewStyles","undefined","_React$useMemo2","Surface","_ref3","_ref3$elevation","overridenTheme","_ref3$testID","_ref3$mode","isV3","_colors$elevation2","map","_colors$elevation","Platform","OS","elevationLevel","getElevationAndroid","_ref6","margin","padding","borderRadius","outerLayerStyles","sharedStyle","_default","exports"],"sources":["C:\\Users\\SIAM\\Downloads\\React-WeDo-v1.0-6-March-2023\\package\\node_modules\\react-native-paper\\src\\components\\Surface.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  ShadowStyleIOS,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../core/theming';\nimport overlay, { isAnimatedValue } from '../styles/overlay';\nimport shadow from '../styles/shadow';\nimport type { ThemeProp, MD3Elevation } from '../types';\nimport { forwardRef } from '../utils/forwardRef';\nimport { splitStyles } from '../utils/splitStyles';\n\ntype Elevation = 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes shadows and background on iOS and Android.\n   * Used to create UI hierarchy between components.\n   *\n   * Note: If `mode` is set to `flat`, Surface doesn't have a shadow.\n   *\n   * Note: In version 2 the `elevation` prop was accepted via `style` prop i.e. `style={{ elevation: 4 }}`.\n   * It's no longer supported with theme version 3 and you should use `elevation` property instead.\n   */\n  elevation?: Elevation;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Mode of the Surface.\n   * - `elevated` - Surface with a shadow and background color corresponding to set `elevation` value.\n   * - `flat` - Surface without a shadow, with the background color corresponding to set `elevation` value.\n   */\n  mode?: 'flat' | 'elevated';\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  ref?: React.RefObject<View>;\n};\n\nconst MD2Surface = forwardRef<View, Props>(\n  ({ style, theme: overrideTheme, ...rest }: Omit<Props, 'elevation'>, ref) => {\n    const { elevation = 4 } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n    const { dark: isDarkTheme, mode, colors } = useInternalTheme(overrideTheme);\n\n    return (\n      <Animated.View\n        ref={ref}\n        {...rest}\n        style={[\n          {\n            backgroundColor:\n              isDarkTheme && mode === 'adaptive'\n                ? overlay(elevation, colors?.surface)\n                : colors?.surface,\n          },\n          elevation ? shadow(elevation) : null,\n          style,\n        ]}\n      />\n    );\n  }\n);\n\nconst shadowColor = '#000';\nconst iOSShadowOutputRanges = [\n  {\n    shadowOpacity: 0.15,\n    height: [0, 1, 2, 4, 6, 8],\n    shadowRadius: [0, 3, 6, 8, 10, 12],\n  },\n  {\n    shadowOpacity: 0.3,\n    height: [0, 1, 1, 1, 2, 4],\n    shadowRadius: [0, 1, 2, 3, 3, 4],\n  },\n];\nconst inputRange = [0, 1, 2, 3, 4, 5];\nfunction getStyleForShadowLayer(\n  elevation: Elevation,\n  layer: 0 | 1\n): Animated.WithAnimatedValue<ShadowStyleIOS> {\n  if (isAnimatedValue(elevation)) {\n    return {\n      shadowColor,\n      shadowOpacity: elevation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n        extrapolate: 'clamp',\n      }),\n      shadowOffset: {\n        width: 0,\n        height: elevation.interpolate({\n          inputRange,\n          outputRange: iOSShadowOutputRanges[layer].height,\n        }),\n      },\n      shadowRadius: elevation.interpolate({\n        inputRange,\n        outputRange: iOSShadowOutputRanges[layer].shadowRadius,\n      }),\n    };\n  }\n\n  return {\n    shadowColor,\n    shadowOpacity: elevation ? iOSShadowOutputRanges[layer].shadowOpacity : 0,\n    shadowOffset: {\n      width: 0,\n      height: iOSShadowOutputRanges[layer].height[elevation],\n    },\n    shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation],\n  };\n}\n\nconst SurfaceIOS = forwardRef<\n  View,\n  Omit<Props, 'elevation'> & {\n    elevation: Elevation;\n    backgroundColor?: string | Animated.AnimatedInterpolation<string | number>;\n  }\n>(\n  (\n    {\n      elevation,\n      style,\n      backgroundColor,\n      testID,\n      children,\n      mode = 'elevated',\n      ...props\n    },\n    ref\n  ) => {\n    const [outerLayerViewStyles, innerLayerViewStyles] = React.useMemo(() => {\n      const {\n        position,\n        alignSelf,\n        top,\n        left,\n        right,\n        bottom,\n        start,\n        end,\n        flex,\n        backgroundColor: backgroundColorStyle,\n        width,\n        height,\n        transform,\n        opacity,\n        ...restStyle\n      } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n      const [filteredStyles, marginStyles, borderRadiusStyles] = splitStyles(\n        restStyle,\n        (style) => style.startsWith('margin'),\n        (style) => style.startsWith('border') && style.endsWith('Radius')\n      );\n\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        filteredStyles.overflow === 'hidden' &&\n        elevation !== 0\n      ) {\n        console.warn(\n          'When setting overflow to hidden on Surface the shadow will not be displayed correctly. Wrap the content of your component in a separate View with the overflow style.'\n        );\n      }\n\n      const bgColor = backgroundColorStyle || backgroundColor;\n\n      const isElevated = mode === 'elevated';\n\n      const outerLayerViewStyles = {\n        ...(isElevated && getStyleForShadowLayer(elevation, 0)),\n        ...marginStyles,\n        ...borderRadiusStyles,\n        position,\n        alignSelf,\n        top,\n        right,\n        bottom,\n        left,\n        start,\n        end,\n        flex,\n        width,\n        height,\n        transform,\n        opacity,\n        backgroundColor: bgColor,\n      };\n\n      const innerLayerViewStyles = {\n        ...(isElevated && getStyleForShadowLayer(elevation, 1)),\n        ...filteredStyles,\n        ...borderRadiusStyles,\n        flex: height ? 1 : undefined,\n        backgroundColor: bgColor,\n      };\n\n      return [outerLayerViewStyles, innerLayerViewStyles];\n    }, [style, elevation, backgroundColor, mode]);\n\n    return (\n      <Animated.View\n        ref={ref}\n        style={outerLayerViewStyles}\n        testID={`${testID}-outer-layer`}\n      >\n        <Animated.View {...props} style={innerLayerViewStyles} testID={testID}>\n          {children}\n        </Animated.View>\n      </Animated.View>\n    );\n  }\n);\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/docs/guides/theming#dark-theme) for more information.\n * Overlay and shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/surface-android.png\" />\n *     <figcaption>Surface on Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/surface-ios.png\" />\n *     <figcaption>Surface on iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface} elevation={4}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *   },\n * });\n * ```\n */\nconst Surface = forwardRef<View, Props>(\n  (\n    {\n      elevation = 1,\n      children,\n      theme: overridenTheme,\n      style,\n      testID = 'surface',\n      mode = 'elevated',\n      ...props\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(overridenTheme);\n\n    if (!theme.isV3)\n      return (\n        <MD2Surface {...props} theme={theme} style={style} ref={ref}>\n          {children}\n        </MD2Surface>\n      );\n\n    const { colors } = theme;\n\n    const inputRange = [0, 1, 2, 3, 4, 5];\n\n    const backgroundColor = (() => {\n      if (isAnimatedValue(elevation)) {\n        return elevation.interpolate({\n          inputRange,\n          outputRange: inputRange.map((elevation) => {\n            return colors.elevation?.[`level${elevation as MD3Elevation}`];\n          }),\n        });\n      }\n\n      return colors.elevation?.[`level${elevation}`];\n    })();\n\n    const isElevated = mode === 'elevated';\n\n    if (Platform.OS === 'web') {\n      return (\n        <Animated.View\n          {...props}\n          ref={ref}\n          testID={testID}\n          style={[\n            { backgroundColor },\n            elevation && isElevated ? shadow(elevation, theme.isV3) : null,\n            style,\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    if (Platform.OS === 'android') {\n      const elevationLevel = [0, 3, 6, 9, 12, 15];\n\n      const getElevationAndroid = () => {\n        if (isAnimatedValue(elevation)) {\n          return elevation.interpolate({\n            inputRange,\n            outputRange: elevationLevel,\n          });\n        }\n\n        return elevationLevel[elevation];\n      };\n\n      const { margin, padding, transform, borderRadius } = (StyleSheet.flatten(\n        style\n      ) || {}) as ViewStyle;\n\n      const outerLayerStyles = { margin, padding, transform, borderRadius };\n      const sharedStyle = [{ backgroundColor }, style];\n\n      return (\n        <Animated.View\n          {...props}\n          testID={testID}\n          ref={ref}\n          style={[\n            {\n              backgroundColor,\n              transform,\n            },\n            outerLayerStyles,\n            sharedStyle,\n            isElevated && {\n              elevation: getElevationAndroid(),\n            },\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    return (\n      <SurfaceIOS\n        {...props}\n        ref={ref}\n        elevation={elevation}\n        backgroundColor={backgroundColor}\n        style={style}\n        testID={testID}\n        mode={mode}\n      >\n        {children}\n      </SurfaceIOS>\n    );\n  }\n);\n\nexport default Surface;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}